name: Build on Tag


on: [push]

jobs:
  get_version:
   runs-on: windows-latest
   steps:
     - name: Build and get version
       id: build
       run: dotnet build /t:OutputPackageVersion --verbosity m | Select-String -Pattern "(?<=Version=)\d+\.\d+\.\d+$" | Foreach-Object { $_.Matches.Value }
       shell: powershell
     - uses: actions/checkout@v1

  get_latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  check:
   runs-on: ubuntu-latest
   needs: [get_version, get_latest]
   steps:
     - if: ${{ steps.build.outputs }} == ${{ steps.previoustag.outputs.tag }}
       run: echo "check succeeded"
 
  create_release:
   runs-on: ubuntu-latest
   needs: [check]
   steps:
   - name: Create Release
     uses: actions/create-release@v1.0.0
     env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
   - uses: actions/checkout@v1
      
  build:
    name: build
    runs-on: ubuntu-latest
    needs: [create_release]
    strategy:
      fail-fast: false
      matrix:
        runtime: [ "win-x64", "win-x86", "linux-x64", "osx-x64" ]
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Build with dotnet
      run: dotnet publish -r ${{ matrix.runtime }} -c Release -p:PublishSingleFile=true -p:PublishTrimmed=true -o ./output/

    - name: Zip artifacts
      run: zip --junk-paths -r ./artifact.zip ./output/

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifact.zip
        asset_name: ${{ matrix.runtime }}.zip
        asset_content_type: application/zip
